/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:45:20 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /Library/MobileSubstrate/DynamicLibraries/ATTweak.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <ATTweak.dylib/ATTweak.dylib-Structs.h>
@class PlaySettings, NSMutableArray, LuaBridge, NSTimer;

@interface Global : NSObject {

	BOOL _isRecording;
	BOOL _isPlaying;
	BOOL _isReadyToPlay;
	PlaySettings* _currentPlaySettings;
	NSMutableArray* _eventArray;
	LuaBridge* _luaBridge;
	IOHIDEventSystemClientRef _ioHIDEventSystem;
	NSTimer* _licenseLimitTimer;

}

@property (nonatomic,retain) PlaySettings * currentPlaySettings;              //@synthesize currentPlaySettings=_currentPlaySettings - In the implementation block
@property (assign,nonatomic) BOOL isRecording;                                //@synthesize isRecording=_isRecording - In the implementation block
@property (assign,nonatomic) BOOL isPlaying;                                  //@synthesize isPlaying=_isPlaying - In the implementation block
@property (assign,nonatomic) BOOL isReadyToPlay;                              //@synthesize isReadyToPlay=_isReadyToPlay - In the implementation block
@property (nonatomic,retain) LuaBridge * luaBridge;                           //@synthesize luaBridge=_luaBridge - In the implementation block
@property (nonatomic,retain) NSMutableArray * eventArray;                     //@synthesize eventArray=_eventArray - In the implementation block
@property (assign) IOHIDEventSystemClientRef ioHIDEventSystem;                //@synthesize ioHIDEventSystem=_ioHIDEventSystem - In the implementation block
@property (nonatomic,retain) NSTimer * licenseLimitTimer;                     //@synthesize licenseLimitTimer=_licenseLimitTimer - In the implementation block
+(id)sharedInstance;
-(void)setIsPlaying:(BOOL)arg1 ;
-(LuaBridge *)luaBridge;
-(void)setLuaBridge:(LuaBridge *)arg1 ;
-(PlaySettings *)currentPlaySettings;
-(NSTimer *)licenseLimitTimer;
-(void)setLicenseLimitTimer:(NSTimer *)arg1 ;
-(void)setCurrentPlaySettings:(PlaySettings *)arg1 ;
-(void)setIsRecording:(BOOL)arg1 ;
-(IOHIDEventSystemClientRef)ioHIDEventSystem;
-(void)setIoHIDEventSystem:(IOHIDEventSystemClientRef)arg1 ;
-(void)setIsReadyToPlay:(BOOL)arg1 ;
-(NSMutableArray *)eventArray;
-(void)setEventArray:(NSMutableArray *)arg1 ;
-(BOOL)isPlaying;
-(id)init;
-(BOOL)isRecording;
-(BOOL)isReadyToPlay;
@end

