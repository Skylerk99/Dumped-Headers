/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:47:50 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/LocalAuthentication.framework/Support/coreauthd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol LAUIDelegate;
@class NSDictionary, NSData, NSString;

@interface MechanismBase : NSObject {

	/*^block*/id _replyToRun;
	NSDictionary* _internalOptions;
	NSDictionary* _policyOptions;
	NSDictionary* _activationParams;
	id<LAUIDelegate> _eventsDelegate;
	long long _eventIdentifier;
	NSData* _acmContext;
	long long _remoteViewController;
	NSString* _remoteViewControllerName;

}

@property (nonatomic,readonly) NSDictionary * internalOptions;                    //@synthesize internalOptions=_internalOptions - In the implementation block
@property (nonatomic,readonly) NSDictionary * policyOptions;                      //@synthesize policyOptions=_policyOptions - In the implementation block
@property (nonatomic,retain) NSDictionary * activationParams;                     //@synthesize activationParams=_activationParams - In the implementation block
@property (assign,nonatomic,__weak) id<LAUIDelegate> eventsDelegate;              //@synthesize eventsDelegate=_eventsDelegate - In the implementation block
@property (nonatomic,readonly) long long eventIdentifier;                         //@synthesize eventIdentifier=_eventIdentifier - In the implementation block
@property (nonatomic,readonly) NSDictionary * availabilityEvents; 
@property (nonatomic,readonly) NSData * acmContext;                               //@synthesize acmContext=_acmContext - In the implementation block
@property (nonatomic,readonly) long long remoteViewController;                    //@synthesize remoteViewController=_remoteViewController - In the implementation block
@property (nonatomic,readonly) NSString * remoteViewControllerName;               //@synthesize remoteViewControllerName=_remoteViewControllerName - In the implementation block
@property (getter=isRunning,nonatomic,readonly) BOOL running; 
@property (getter=isAvailable,nonatomic,readonly) BOOL available; 
-(void)failAuthenticationWithError:(id)arg1 ;
-(BOOL)isAvailableWithError:(id*)arg1 ;
-(void)noResponseEventWithParams:(id)arg1 ;
-(void)finishRunWithResult:(id)arg1 error:(id)arg2 skipReply:(BOOL)arg3 ;
-(void)finishRunWithResult:(id)arg1 error:(id)arg2 ;
-(BOOL)isProcessedBy:(id)arg1 ;
-(BOOL)requiresRemoteViewControllerUiWithEventProcessing:(id)arg1 ;
-(id)initWithEventIdentifier:(long long)arg1 remoteViewController:(long long)arg2 remoteViewControllerName:(id)arg3 ;
-(void)runWithHints:(id)arg1 eventsDelegate:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)succeedAuthenticationWithResult:(id)arg1 ;
-(id)bestEffortAvailableMechanismWithError:(id*)arg1 ;
-(id)findMechanismWithEventIdentifier:(long long)arg1 ;
-(id)findMechanismWithClass:(Class)arg1 ;
-(id)backgroundMechanismForEventProcessing:(id)arg1 ;
-(long long)remoteViewControllerForEventProcessing:(id)arg1 ;
-(NSDictionary *)availabilityEvents;
-(id)adjustStringForNestedDescription:(id)arg1 ;
-(BOOL)requiresUiWithEventProcessing:(id)arg1 ;
-(NSDictionary *)internalOptions;
-(NSDictionary *)policyOptions;
-(NSDictionary *)activationParams;
-(void)setActivationParams:(NSDictionary *)arg1 ;
-(id<LAUIDelegate>)eventsDelegate;
-(void)setEventsDelegate:(id<LAUIDelegate>)arg1 ;
-(NSData *)acmContext;
-(NSString *)remoteViewControllerName;
-(long long)eventIdentifier;
-(void)event:(long long)arg1 params:(id)arg2 reply:(/*^block*/id)arg3 ;
-(BOOL)isAvailable;
-(long long)remoteViewController;
-(BOOL)isRunning;
-(void)willFinish;
-(void)cancelAuthentication;
@end

