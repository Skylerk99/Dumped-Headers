/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:46:47 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/AVKit.framework/AVKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVKit/AVKit-Structs.h>
#import <UIKit/UIViewController.h>
#import <AVKit/AVPictureInPictureControllerDelegate.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <UIKit/UIPopoverPresentationControllerDelegate.h>
#import <UIKit/UIViewControllerAnimatedTransitioning.h>
#import <UIKit/UIViewControllerTransitioningDelegate.h>

@protocol AVPlayerViewControllerDelegate;
@class AVPlayerController, NSDictionary, AVNowPlayingInfoController, AVPictureInPictureController, UIView, AVUnsupportedContentIndicatorView, AVAudioOnlyIndicatorView, AVExternalPlaybackIndicatorView, AVLoadingIndicatorView, __AVPlayerLayerView, AVTouchIgnoringView, AVPlaybackControlsViewController, UIWindow, NSTimer, AVFullScreenViewController, AVPlayer, NSString;

@interface AVPlayerViewController : UIViewController <AVPictureInPictureControllerDelegate, UIGestureRecognizerDelegate, UIPopoverPresentationControllerDelegate, UIViewControllerAnimatedTransitioning, UIViewControllerTransitioningDelegate> {

	AVPlayerController* _playerController;
	unsigned _playerShouldAutoplay : 1;
	unsigned _showsPlaybackControls : 1;
	long long _videoGravity;
	unsigned _allowsPictureInPicturePlayback : 1;
	NSDictionary* _pixelBufferAttributes;
	AVNowPlayingInfoController* _nowPlayingInfoController;
	AVPictureInPictureController* _pictureInPictureController;
	UIView* _containerView;
	AVUnsupportedContentIndicatorView* _unsupportedContentIndicatorView;
	AVAudioOnlyIndicatorView* _audioOnlyIndicatorView;
	AVExternalPlaybackIndicatorView* _externalPlaybackIndicatorView;
	AVLoadingIndicatorView* _loadingIndicatorView;
	UIView* _contentView;
	__AVPlayerLayerView* _playerLayerView;
	UIView* _contentOverlayView;
	UIView* _controlsView;
	AVTouchIgnoringView* _iAdPrerollView;
	AVPlaybackControlsViewController* _playbackControlsViewController;
	UIWindow* _secondScreenWindow;
	unsigned _viewIsFullScreen : 1;
	id _screenDidConnectObserver;
	id _screenDidDisconnectObserver;
	id _screenModeDidChangeObserver;
	id _activeAudioRouteDidChangeObserver;
	id _nowPlayingControllerDidReceiveStopCommandEventObserver;
	id _applicationSuspendedObserver;
	NSTimer* _loadingIndicatorTimer;
	unsigned _playbackControlsViewControllerShouldShowLoadingIndicator : 1;
	unsigned _playbackControlsViewControllerShowsScaleButton : 1;
	long long _playbackControlsViewControllerScaleButtonType;
	unsigned _playbackControlsViewControllerPictureInPictureButtonEnabled : 1;
	unsigned _playbackControlsViewVisibilityNeedsUpdate : 1;
	long long _playbackControlsViewVisibilityCounter;
	NSTimer* _playbackControlsViewVisibilityTimer;
	unsigned _isShowingPlaybackControlsViewForUserInteraction : 1;
	unsigned _isShowingPlaybackControlsViewAfterUserInteraction : 1;
	unsigned _isShowingPlaybackControlsViewForUnsupportedContent : 1;
	unsigned _isShowingPlaybackControlsViewForAudioOnlyContent : 1;
	unsigned _isShowingPlaybackControlsViewForPlayingOnExternalScreen : 1;
	unsigned _isHidingPlaybackControlsViewForPictureInPicturePlayback : 1;
	unsigned _showsPlaybackControlsView : 1;
	unsigned _isAnimatingPlaybackControlsViewVisibility : 1;
	AVFullScreenViewController* _fullScreenViewController;
	unsigned _animateFullScreenTransitionForPresenting : 1;
	unsigned _isTransitioningToOrFromFullScreen : 1;
	unsigned _animateFullScreenTransition : 1;
	unsigned _transitionFromFullScreenOrDismissViewControllerWhenEnteringBackgroundAfterPictureInPictureStart : 1;
	id<AVPlayerViewControllerDelegate> _delegate;
	SCD_Struct_AV5 _delegateRespondsTo;
	unsigned _showsExitFullScreenButton : 1;

}

@property (assign,nonatomic) BOOL showsExitFullScreenButton; 
@property (getter=isPictureInPicturePossible,nonatomic,readonly) BOOL pictureInPicturePossible; 
@property (getter=isPictureInPictureActive,nonatomic,readonly) BOOL pictureInPictureActive; 
@property (getter=isPictureInPictureSuspended,nonatomic,readonly) BOOL pictureInPictureSuspended; 
@property (nonatomic,readonly) BOOL pictureInPictureWasStartedWhenEnteringBackground; 
@property (nonatomic,readonly) UIView * iAdPrerollView; 
@property (nonatomic,retain) AVPlayer * player; 
@property (assign,nonatomic) BOOL showsPlaybackControls; 
@property (nonatomic,copy) NSString * videoGravity; 
@property (getter=isReadyForDisplay,nonatomic,readonly) BOOL readyForDisplay; 
@property (nonatomic,readonly) CGRect videoBounds; 
@property (nonatomic,readonly) UIView * contentOverlayView; 
@property (assign,nonatomic) BOOL allowsPictureInPicturePlayback; 
@property (assign,nonatomic,__weak) id<AVPlayerViewControllerDelegate> delegate; 
@property (nonatomic,retain) AVPlayerController * playerController; 
@property (assign,nonatomic) BOOL updatesNowPlayingInfoCenter; 
@property (nonatomic,copy) NSDictionary * pixelBufferAttributes; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)preparePrerollAds;
+(id)keyPathsForValuesAffectingPictureInPicturePossible;
+(id)keyPathsForValuesAffectingPictureInPictureWasStartedWhenEnteringBackground;
+(id)keyPathsForValuesAffectingPictureInPictureActive;
+(id)keyPathsForValuesAffectingPictureInPictureSuspended;
+(id)keyPathsForValuesAffectingReadyForDisplay;
+(id)keyPathsForValuesAffectingVideoBounds;
+(id)keyPathsForValuesAffectingPixelBufferAttributes;
+(id)keyPathsForValuesAffectingPlayer;
+(id)keyPathsForValuesAffectingVideoGravity;
+(void)initialize;
-(id)_iAd_prerollController;
-(void)set_iAd_prerollController:(id)arg1 ;
-(void)playPrerollAdWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)cancelPreroll;
-(void)fullScreenButtonTapped:(id)arg1 ;
-(void)pictureInPictureButtonTapped:(id)arg1 ;
-(void)mediaSelectionButtonTapped:(id)arg1 ;
-(void)scaleButtonTapped:(id)arg1 ;
-(void)doneButtonTapped:(id)arg1 ;
-(void)togglePlayback:(id)arg1 ;
-(void)showPlaybackControlsViewForVolumeChange;
-(void)showPlaybackControlsViewForTouchDown;
-(void)hidePlaybackControlsViewForTouchUp;
-(BOOL)pictureInPictureWasStartedWhenEnteringBackground;
-(BOOL)isPictureInPictureSuspended;
-(BOOL)showsExitFullScreenButton;
-(void)setShowsExitFullScreenButton:(BOOL)arg1 ;
-(void)stopPictureInPicture;
-(BOOL)isPictureInPicturePossible;
-(BOOL)isPictureInPictureActive;
-(id)initWithPlayerLayerView:(id)arg1 ;
-(void)startPictureInPicture;
-(void)enterFullScreenAnimated:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)exitFullScreenAnimated:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(UIView *)iAdPrerollView;
-(NSDictionary *)pixelBufferAttributes;
-(void)setPixelBufferAttributes:(NSDictionary *)arg1 ;
-(BOOL)showsPlaybackControls;
-(void)_updateAudioOnlyIndicatorView;
-(BOOL)updatesNowPlayingInfoCenter;
-(void)_handleDoubleTapGesture:(id)arg1 ;
-(void)_transitionFromFullScreenViewControllerAnimated:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_updatePlaybackControlsViewVisibilityForAudioOnlyContent;
-(void)_hidePlaybackControlsViewIfPossibleAfterDelayIfPlaying;
-(void)_updatePlaybackControlsViewVisibilityForPlayingOnExternalScreen;
-(void)_updatePlaybackControlsViewController;
-(void)_updateShowsScaleButton;
-(UIView *)contentOverlayView;
-(void)_updateScaleButtonType;
-(void)_firePlaybackControlsViewVisibilityTimer:(id)arg1 ;
-(void)_handleSingleTapGesture:(id)arg1 ;
-(void)_transitionFromFullScreenViewControllerWithReason:(long long)arg1 animated:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_showPlaybackControlsViewIfNeeded;
-(void)_mediaSelectionDoneButtonTapped:(id)arg1 ;
-(void)_togglePictureInPicture;
-(void)_showPlaybackControlsViewIfNeededAndHideIfPossibleAfterDelayIfPlayingWithDelay:(double)arg1 ;
-(CGRect)videoBounds;
-(void)_fireLoadingIndicatorTimer:(id)arg1 ;
-(void)_showPlaybackControlsViewIfNeededAndHideIfPossibleAfterDelayIfPlaying;
-(void)_updateExternalPlaybackIndicatorView;
-(void)_showOrHidePlaybackControlsView;
-(void)_updatePlayerLayerViewAndContentOverlayView;
-(void)_updatePlaybackControlsViewVisibilityIfNeeded;
-(void)_setPlaybackControlsViewVisibilityNeedsUpdate;
-(BOOL)_isUnsupportedContent;
-(void)_hidePlaybackControlsViewIfPossibleUntilFurtherUserInteraction;
-(void)setUpdatesNowPlayingInfoCenter:(BOOL)arg1 ;
-(BOOL)allowsPictureInPicturePlayback;
-(void)_updateViewIsFullScreen:(BOOL)arg1 ;
-(void)_updatePlaybackControlsViewVisibilityForUnsupportedContent;
-(void)_transitionToFullScreenViewControllerAnimated:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_updateUnsupportedContentIndicatorView;
-(BOOL)_showsPlaybackControlsView;
-(void)_hidePlaybackControlsViewIfPossible;
-(BOOL)_isAudioOnlyContent;
-(void)_updatePictureInPictureButtonEnabled;
-(void)_handleDoubleDoubleTapGesture:(id)arg1 ;
-(void)pictureInPictureControllerDidStartPictureInPicture:(id)arg1 ;
-(void)pictureInPictureController:(id)arg1 restoreUserInterfaceForPictureInPictureStopWithCompletionHandler:(/*^block*/id)arg2 ;
-(void)pictureInPictureController:(id)arg1 failedToStartPictureInPictureWithError:(id)arg2 ;
-(void)pictureInPictureControllerDidStopPictureInPicture:(id)arg1 ;
-(void)pictureInPictureControllerWillStartPictureInPicture:(id)arg1 ;
-(void)pictureInPictureControllerWillStopPictureInPicture:(id)arg1 ;
-(NSString *)videoGravity;
-(void)setPlayer:(AVPlayer *)arg1 ;
-(BOOL)isReadyForDisplay;
-(AVPlayer *)player;
-(void)setVideoGravity:(NSString *)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setDelegate:(id<AVPlayerViewControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<AVPlayerViewControllerDelegate>)delegate;
-(double)transitionDuration:(id)arg1 ;
-(void)animateTransition:(id)arg1 ;
-(void)animationEnded:(BOOL)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(void)loadView;
-(id)initWithNibName:(id)arg1 bundle:(id)arg2 ;
-(BOOL)canBecomeFirstResponder;
-(long long)adaptivePresentationStyleForPresentationController:(id)arg1 ;
-(id)presentationController:(id)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2 ;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(BOOL)_ignoreAppSupportedOrientations;
-(id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3 ;
-(id)animationControllerForDismissedController:(id)arg1 ;
-(id)childViewControllerForStatusBarHidden;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)popoverPresentationControllerDidDismissPopover:(id)arg1 ;
-(void)_handlePinchGesture:(id)arg1 ;
-(AVPlayerController *)playerController;
-(void)setPlayerController:(AVPlayerController *)arg1 ;
-(void)setShowsPlaybackControls:(BOOL)arg1 ;
-(void)setAllowsPictureInPicturePlayback:(BOOL)arg1 ;
@end

