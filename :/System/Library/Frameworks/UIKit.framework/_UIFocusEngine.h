/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:48:38 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@protocol _UIFocusScrollAnimator;
@class _UIFocusEnginePanGestureRecognizer, UITapGestureRecognizer, CADisplayLink, NSArray, NSMapTable, UIScrollView, _UIFocusTouchDebugView, UIWindow, UIView, UIMoveEvent, NSString;

@interface _UIFocusEngine : NSObject <UIGestureRecognizerDelegate> {

	_UIFocusEnginePanGestureRecognizer* _panGestureRecognizer;
	UITapGestureRecognizer* _tapGestureRecognizer;
	CGPoint _touchBeganPoint;
	CGPoint _lastKnownTouchPoint;
	CGVector _progressAccumulator;
	id<_UIFocusScrollAnimator> _scrollViewAnimator;
	CGPoint _firstMomentumTouchPoint;
	CGPoint _lastMomentumTouchPoint;
	CGPoint _momentumVelocity;
	double _momentumFriction;
	unsigned long long _focusUpdateCountSinceLastPanBegan;
	CADisplayLink* _momentumDisplayLink;
	NSArray* _remoteGestures;
	CGPoint _gameControllerVirtualTrackpadLocation;
	CGPoint _lastReadGameControllerStickLocation;
	CADisplayLink* _stickDisplayLink;
	CGPoint _currentFocusDirection;
	NSMapTable* _focusRollbackAnimations;
	UIScrollView* _peekingScrollView;
	CGSize _peekingScrollViewPeekSize;
	unsigned long long _peekingHeading;
	NSMapTable* _cachedViewSearchResults;
	double _lastSoundStartTime;
	unsigned long long _currentGestureID;
	UIScrollView* _lastScrolledScroll;
	double _lastEdgeScrollEdgeValue;
	_UIFocusTouchDebugView* _touchIndicatorView;
	NSMapTable* _activeScrollViewLoadingBounds;
	NSMapTable* _activeScrollViewAnimatingBounds;
	unsigned long long _inputType;
	struct {
		unsigned isSettingFocusedView : 1;
		unsigned isEligibleToCrossSpeedBump : 1;
		unsigned isContinuingTouchWithMomentum : 1;
		unsigned isAnimatingFocusDirectionRollback : 1;
		unsigned isPeekingScrollView : 1;
		unsigned shouldApplyAcceleration : 1;
		unsigned shouldShowDebugOverlays : 1;
	}  _flags;
	BOOL _enabled;
	BOOL _wantsScrollPeeking;
	BOOL _shouldShowDebugOverlays;
	BOOL _sendsFocusDirection;
	BOOL _playsSoundOnFocusChange;
	UIWindow* _targetWindow;
	UIView* _viewForTouchDeferredFocus;
	UIMoveEvent* _moveEvent;

}

@property (assign,getter=isEnabled,nonatomic) BOOL enabled;                                                                                 //@synthesize enabled=_enabled - In the implementation block
@property (assign,nonatomic) BOOL wantsScrollPeeking;                                                                                       //@synthesize wantsScrollPeeking=_wantsScrollPeeking - In the implementation block
@property (assign,nonatomic,__weak) UIWindow * targetWindow;                                                                                //@synthesize targetWindow=_targetWindow - In the implementation block
@property (assign,nonatomic,__weak) UIView * viewForTouchDeferredFocus;                                                                     //@synthesize viewForTouchDeferredFocus=_viewForTouchDeferredFocus - In the implementation block
@property (assign,nonatomic) BOOL shouldShowDebugOverlays;                                                                                  //@synthesize shouldShowDebugOverlays=_shouldShowDebugOverlays - In the implementation block
@property (nonatomic,retain) UIMoveEvent * moveEvent;                                                                                       //@synthesize moveEvent=_moveEvent - In the implementation block
@property (assign,setter=_setSendsFocusDirection:,getter=_sendsFocusDirection,nonatomic) BOOL sendsFocusDirection;                          //@synthesize sendsFocusDirection=_sendsFocusDirection - In the implementation block
@property (assign,setter=_setPlaysSoundOnFocusChange:,getter=_playsSoundOnFocusChange,nonatomic) BOOL playsSoundOnFocusChange;              //@synthesize playsSoundOnFocusChange=_playsSoundOnFocusChange - In the implementation block
@property (nonatomic,readonly) double _animationCoefficient; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)_runPerformanceTestWithName:(id)arg1 fakeEvents:(SCD_Struct_UI10*)arg2 count:(int)arg3 ;
-(void)_runPerformanceTestWithName:(id)arg1 bySwipingAlongAxis:(int)arg2 ;
-(void)dealloc;
-(id)init;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(void)reset;
-(BOOL)_updateFocusedViewAndScroll:(id)arg1 withSoundVolume:(double)arg2 ;
-(void)_setUpSounds;
-(void)_cleanUpSounds;
-(void)setTargetWindow:(UIWindow *)arg1 ;
-(void)_removeGestureRecognizers;
-(void)setEnabled:(BOOL)arg1 ;
-(void)_addGestureRecognizers;
-(void)_updateControllerState:(id)arg1 ;
-(void)_updatePanLocation:(CGPoint)arg1 reportedVelocity:(CGVector)arg2 wantsFocusDirection:(BOOL)arg3 ;
-(void)_stickDrivenGestureStart:(id)arg1 ;
-(void)_activateControllerDisplayLink;
-(void)_stickDrivenGestureEnd:(id)arg1 ;
-(void)_invalidateControllerDisplayLink;
-(BOOL)moveInDirection:(unsigned long long)arg1 ;
-(UIView *)viewForTouchDeferredFocus;
-(void)setViewForTouchDeferredFocus:(UIView *)arg1 ;
-(void)setMoveEvent:(UIMoveEvent *)arg1 ;
-(void)_resetViewSearchCache;
-(id)_focusedView;
-(id)_bestFocusCandidateForFocusHeading:(unsigned long long)arg1 currentFocusView:(id)arg2 direction:(CGVector)arg3 ;
-(void)_resetFocusDirectionRollbackForAllViews;
-(void)_resetMomentum;
-(void)_resetScrollViewPeek:(BOOL)arg1 ;
-(void)_panGestureStart:(id)arg1 ;
-(void)_panGestureEnd:(id)arg1 ;
-(int)_touchRegionForDigitizerLocation:(CGPoint)arg1 ;
-(void)_sendDelayedPressEventWithType:(long long)arg1 timestamp:(double)arg2 ;
-(void)_handlePanGesture:(id)arg1 ;
-(void)_handleTapGesture:(id)arg1 ;
-(void)_handleButtonGesture:(id)arg1 ;
-(id)_defaultFocusAnimationCoordinatorForContext:(id)arg1 ;
-(BOOL)_updateFocusWithContext:(id)arg1 animationCoordinator:(id)arg2 ;
-(BOOL)_shouldEagerlyValidateFocusCandidates;
-(id)_findFocusCandidateStartingInRegionWithoutLoadingScrollViewContent:(id)arg1 directionVector:(CGVector)arg2 startingView:(id)arg3 minimumSearchArea:(CGRect)arg4 ;
-(void)_setVisibleRect:(CGRect)arg1 forLoadingScrollViewContent:(id)arg2 ;
-(void)_clearVisibleRectForLoadingScrollViewContent:(id)arg1 ;
-(id)_cachedSearchResultForHeading:(unsigned long long)arg1 ;
-(id)_findFocusCandidateByExhaustivelySearchingScrollView:(id)arg1 directionVector:(CGVector)arg2 startingView:(id)arg3 ;
-(CGRect)_minimumSearchAreaForContainerView:(id)arg1 ;
-(BOOL)_wouldCrossSpeedBumpWhenMovingInDirection:(CGVector)arg1 fromView:(id)arg2 toView:(id)arg3 ;
-(void)_setCachedSearchResult:(id)arg1 forHeading:(unsigned long long)arg2 ;
-(void)_loadScrollViewContentInDirection:(CGVector)arg1 fromView:(id)arg2 ;
-(id)_bestFocusCandidateStartingAtView:(id)arg1 inDirection:(CGVector)arg2 ;
-(void)_sendFocusDirectionNotificationWithDirection:(CGPoint)arg1 ;
-(BOOL)_updateFocusWithContext:(id)arg1 ;
-(BOOL)_playsSoundOnFocusChange;
-(void)_playFocusSound:(long long)arg1 withPan:(double)arg2 volume:(double)arg3 ;
-(CGRect)_visibleBoundsForScrollView:(id)arg1 ;
-(BOOL)_wouldCrossSpeedBumpWhenMovingInDirection:(CGVector)arg1 ;
-(void)_resetFocusDirectionRollbackForView:(id)arg1 ;
-(void)_sendGestureBeginNotification;
-(CGSize)_touchSensitivityForView:(id)arg1 ;
-(UIWindow *)targetWindow;
-(void)_updateDebugOverlayWithTouchAtNormalizedPoint:(CGPoint)arg1 navigationBoundary:(CGRect)arg2 ;
-(void)_recordMomentumForPoint:(CGPoint)arg1 ;
-(BOOL)_sendsFocusDirection;
-(BOOL)_attemptToMoveFocusAlongVector:(CGVector)arg1 reportedVelocity:(CGVector)arg2 startingView:(id)arg3 ;
-(BOOL)wantsScrollPeeking;
-(void)_peekScrollViewStartingAtFocusedView:(id)arg1 progress:(CGVector)arg2 ;
-(void)_continueTouchWithMomentum;
-(BOOL)_speedBumpsAllowFocusToMoveInDirection:(CGVector)arg1 ;
-(BOOL)_moveFocusAlongVector:(CGVector)arg1 withVelocity:(CGVector)arg2 ;
-(void)_sendMomentumEndNotificationsAndAnimateRollback:(BOOL)arg1 ;
-(id)_scrollViewToPeekStartingAtFocusedView:(id)arg1 directionVector:(CGVector)arg2 ;
-(void)_sendGestureEndNotification;
-(double)_frictionInterpolationForMomentumSpeed:(double)arg1 totalDistance:(double)arg2 slope:(double)arg3 shortDistance:(double)arg4 longDistance:(double)arg5 ;
-(double)_horizontalFrictionInterpolationForMomentumSpeed:(double)arg1 totalDistance:(double)arg2 ;
-(double)_verticalFrictionInterpolationForMomentumSpeed:(double)arg1 totalDistance:(double)arg2 ;
-(void)_momentumHeartbeat:(id)arg1 ;
-(void)_startFocusDirectionRollbackForView:(id)arg1 ;
-(void)_updateDebugOverlayByRemovingTouchIndicators;
-(CGPoint)_contentOffsetForScrollView:(id)arg1 toFocusView:(id)arg2 ;
-(void)_ensureFocusedViewIsOnscreen:(id)arg1 ;
-(void)_scrollView:(id)arg1 toOffset:(CGPoint)arg2 ;
-(void)_addVisibleRect:(CGRect)arg1 toScrollViewForAnimation:(id)arg2 ;
-(void)_removeVisibleRect:(CGRect)arg1 fromScrollViewForAnimation:(id)arg2 ;
-(CGPoint)_contentOffsetForScrollView:(id)arg1 toFocusView:(id)arg2 targetOffset:(CGPoint)arg3 targetBounds:(CGRect)arg4 ;
-(void)_setupDebugOverlays;
-(void)_teardownDebugOverlays;
-(id)_closestFocusableViewToRect:(CGRect)arg1 inView:(id)arg2 ;
-(BOOL)moveWithEvent:(id)arg1 ;
-(id)viewForFocusHeading:(unsigned long long)arg1 fromView:(id)arg2 ;
-(void)_gestureRecognizerFailed:(id)arg1 ;
-(void)_setPanGestureRecognizer:(id)arg1 ;
-(id)_panGestureRecognizer;
-(BOOL)_isContinuingTouchWithMomentum;
-(BOOL)_isScrollingScrollView:(id)arg1 ;
-(void)_cancelScrollingForScrollView:(id)arg1 ;
-(double)_effortRequiredToMoveInDirection:(CGVector)arg1 ;
-(void)_scrollFromView:(id)arg1 toView:(id)arg2 ;
-(void)setShouldShowDebugOverlays:(BOOL)arg1 ;
-(id)_closestFocusableViewToPoint:(CGPoint)arg1 inView:(id)arg2 ;
-(double)_animationCoefficient;
-(BOOL)isEnabled;
-(void)setWantsScrollPeeking:(BOOL)arg1 ;
-(BOOL)shouldShowDebugOverlays;
-(UIMoveEvent *)moveEvent;
-(void)_setSendsFocusDirection:(BOOL)arg1 ;
-(void)_setPlaysSoundOnFocusChange:(BOOL)arg1 ;
@end

