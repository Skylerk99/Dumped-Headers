/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:48:09 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSSecureCoding.h>

@class NSURL, LSApplicationProxy;

@interface LSAppLink : NSObject <NSSecureCoding> {

	NSURL* _URL;
	LSApplicationProxy* _targetApplicationProxy;

}

@property (assign) long long openStrategy; 
@property (copy) NSURL * URL;                                                //@synthesize URL=_URL - In the implementation block
@property (retain) LSApplicationProxy * targetApplicationProxy;              //@synthesize targetApplicationProxy=_targetApplicationProxy - In the implementation block
+(BOOL)URLComponentsAreValidForAppLinks:(id)arg1 error:(id*)arg2 ;
+(void)considerPlugInClassAtIndex:(unsigned long long)arg1 plugInClasses:(id)arg2 URLComponents:(id)arg3 XPCConnection:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
+(id)_normalizedURLPath:(id)arg1 escapeCharacters:(BOOL)arg2 ;
+(id)dispatchQueue;
+(id)_predicateForURLPathPattern:(id)arg1 ;
+(long long)_openStrategyForBundleIdentifier:(id)arg1 ;
+(BOOL)_shouldAppLinkOpenWithStrategy:(long long)arg1 XPCConnection:(id)arg2 ;
+(BOOL)_XPCConnectionIsBrowser:(id)arg1 ;
+(void)_setOpenStrategy:(long long)arg1 forBundleIdentifier:(id)arg2 XPCConnection:(id)arg3 ;
+(void)_getAppLinkWithURL:(id)arg1 requireEntitlement:(BOOL)arg2 XPCConnection:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
+(id)_appLinkWithURL:(id)arg1 applicationProxy:(id)arg2 plugIn:(id)arg3 error:(id*)arg4 ;
+(void)_openWithState:(id)arg1 XPCConnection:(id)arg2 machPort:(unsigned)arg3 completionHandler:(/*^block*/id)arg4 ;
+(void)setShouldHandleURL:(id)arg1 fromBrowser:(BOOL)arg2 asAppLink:(BOOL)arg3 ;
+(BOOL)supportsSecureCoding;
+(void)getAppLinkWithURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
+(void)openWithURL:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)openInWebBrowser:(BOOL)arg1 setOpenStrategy:(long long)arg2 webBrowserState:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)setOpenStrategy:(long long)arg1 ;
-(long long)openStrategy;
-(void)openInWebBrowser:(BOOL)arg1 setAppropriateOpenStrategyAndWebBrowserState:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setTargetApplicationProxy:(LSApplicationProxy *)arg1 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)dealloc;
-(id)debugDescription;
-(NSURL *)URL;
-(LSApplicationProxy *)targetApplicationProxy;
-(void)setURL:(NSURL *)arg1 ;
-(void)openWithCompletionHandler:(/*^block*/id)arg1 ;
@end

