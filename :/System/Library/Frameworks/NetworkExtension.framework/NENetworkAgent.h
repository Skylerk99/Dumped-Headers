/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:48:12 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/Frameworks/NetworkExtension.framework/NetworkExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NWNetworkAgent.h>

@class NSString, NSUUID;

@interface NENetworkAgent : NSObject <NWNetworkAgent> {

	BOOL active;
	BOOL kernelActivated;
	BOOL userActivated;
	BOOL voluntary;
	int _internalSessionType;
	NSUUID* agentUUID;
	NSString* agentDescription;
	NSString* _configurationName;
	NSUUID* _internalUUID;
	/*^block*/id _internalStartHandler;

}

@property (copy,readonly) NSUUID * configurationUUID; 
@property (copy) NSString * configurationName;                          //@synthesize configurationName=_configurationName - In the implementation block
@property (readonly) int sessionType; 
@property (copy) NSUUID * internalUUID;                                 //@synthesize internalUUID=_internalUUID - In the implementation block
@property (assign) int internalSessionType;                             //@synthesize internalSessionType=_internalSessionType - In the implementation block
@property (copy) id internalStartHandler;                               //@synthesize internalStartHandler=_internalStartHandler - In the implementation block
@property (copy) NSString * agentDescription; 
@property (copy) NSUUID * agentUUID; 
@property (getter=isActive) BOOL active; 
@property (getter=isKernelActivated) BOOL kernelActivated; 
@property (getter=isUserActivated) BOOL userActivated; 
@property (getter=isVoluntary) BOOL voluntary; 
@property (getter=isSpecificUseOnly) BOOL specificUseOnly; 
@property (getter=isNetworkProvider) BOOL networkProvider; 
+(id)agentDomain;
+(id)agentType;
+(id)agentFromData:(id)arg1 ;
-(NSString *)configurationName;
-(id)initWithConfigUUID:(id)arg1 sessionType:(int)arg2 ;
-(NSUUID *)internalUUID;
-(int)internalSessionType;
-(void)setInternalStartHandler:(id)arg1 ;
-(id)internalStartHandler;
-(NSUUID *)configurationUUID;
-(void)setConfigurationName:(NSString *)arg1 ;
-(void)setInternalUUID:(NSUUID *)arg1 ;
-(void)setInternalSessionType:(int)arg1 ;
-(BOOL)isActive;
-(void)setActive:(BOOL)arg1 ;
-(void)setStartHandler:(/*^block*/id)arg1 ;
-(id)copyAgentData;
-(BOOL)startAgentWithOptions:(id)arg1 ;
-(NSString *)agentDescription;
-(void)setAgentDescription:(NSString *)arg1 ;
-(NSUUID *)agentUUID;
-(void)setAgentUUID:(NSUUID *)arg1 ;
-(BOOL)isKernelActivated;
-(void)setKernelActivated:(BOOL)arg1 ;
-(BOOL)isUserActivated;
-(void)setUserActivated:(BOOL)arg1 ;
-(BOOL)isVoluntary;
-(void)setVoluntary:(BOOL)arg1 ;
-(int)sessionType;
@end

