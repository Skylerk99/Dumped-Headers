/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:49:35 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PreferenceBundles/BluetoothSettings.bundle/BluetoothSettings
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <BluetoothSettings/BluetoothSettings-Structs.h>
#import <Preferences/PSListController.h>
#import <libobjc.A.dylib/CBCentralManagerPrivateDelegate.h>
#import <libobjc.A.dylib/CBPairingAgentDelegate.h>
#import <AppleMIDIBluetoothDriver/CBPeripheralDelegate.h>
#import <UIKit/UIAlertViewDelegate.h>
#import <libobjc.A.dylib/BTAlertDelegate.h>

@class PSSpecifier, NSMutableDictionary, NSTimer, BTAlert, BTSSPPairingRequest, UIAlertController, CBCentralManager, HKHealthStore, NSMutableSet, NSString;

@interface BTSDevicesController : PSListController <CBCentralManagerPrivateDelegate, CBPairingAgentDelegate, CBPeripheralDelegate, UIAlertViewDelegate, BTAlertDelegate> {

	PSSpecifier* _myDevicesGroupSpec;
	PSSpecifier* _otherDevicesGroupSpec;
	NSMutableDictionary* _devicesDict;
	BOOL _power;
	BOOL _togglingPower;
	BOOL _bluetoothIsBusy;
	BOOL _bluetoothInitialized;
	BOOL _allowScanning;
	PSSpecifier* _currentDeviceSpecifier;
	NSTimer* _currentDeviceConnectionTimer;
	BTAlert* _alert;
	BTSSPPairingRequest* _sspAlert;
	UIAlertController* _syncContactsAlert;
	NETRBClientRef _netClient;
	CBCentralManager* _centralManager;
	HKHealthStore* _healthKitStore;
	NSMutableSet* _knownHealthDevices;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)authenticationRequestHandler:(id)arg1 ;
-(void)devicePairedHandler:(id)arg1 ;
-(void)cleanupPairing;
-(id)specifiers;
-(void)dealloc;
-(id)init;
-(void)tableView:(id)arg1 accessoryButtonTappedForRowWithIndexPath:(id)arg2 ;
-(void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2 ;
-(id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2 ;
-(void)applicationWillTerminate:(id)arg1 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)applicationWillResignActive:(id)arg1 ;
-(void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2 ;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)updateUI:(BOOL)arg1 ;
-(void)alertSheetDismissed:(id)arg1 ;
-(void)healthDeviceUnregisteredHandler:(id)arg1 ;
-(void)powerChangedHandler:(id)arg1 ;
-(void)deviceDiscoveredHandler:(id)arg1 ;
-(void)deviceUpdatedHandler:(id)arg1 ;
-(void)deviceRemovedHandler:(id)arg1 ;
-(void)deviceUnpairedHandler:(id)arg1 ;
-(void)deviceConnectedHandler:(id)arg1 ;
-(void)deviceDisconnectedHandler:(id)arg1 ;
-(void)_retrievedRegisteredHealthDevices:(id)arg1 ;
-(void)allowBluetoothConnections:(BOOL)arg1 ;
-(void)setBluetoothIsBusy:(BOOL)arg1 ;
-(void)_addDevice:(id)arg1 ;
-(void)_updateDevicePosition:(id)arg1 ;
-(void)_removeDevice:(id)arg1 ;
-(id)_specifierForDevice:(id)arg1 ;
-(void)pinRequestHandler:(id)arg1 ;
-(void)sspConfirmationHandler:(id)arg1 ;
-(void)sspNumericComparisonHandler:(id)arg1 ;
-(void)sspPasskeyDisplayHandler:(id)arg1 ;
-(id)_getDeviceForPeripheral:(id)arg1 ;
-(void)_setupCentralScanning;
-(void)_peripheralDidCompletePairing:(id)arg1 ;
-(void)showSyncContactsPopup:(id)arg1 ;
-(BOOL)shouldHideDevice:(id)arg1 ;
-(void)_addDeviceSpecifier:(id)arg1 withDevice:(id)arg2 ;
-(void)_removeDeviceSpecifier:(id)arg1 ;
-(id)_knownDevicesSpecifiers;
-(void)updatePowerState:(BOOL)arg1 powerSpec:(id)arg2 ;
-(void)peripheralConnectionTimeout:(id)arg1 ;
-(void)setSSPConfirmation:(long long)arg1 forDevice:(id)arg2 ;
-(void)userDidTapWatchLink:(id)arg1 ;
-(id)currentSpecifier;
-(id)bluetoothEnabled:(id)arg1 ;
-(void)setBluetoothEnabled:(id)arg1 specifier:(id)arg2 ;
-(void)pairingAgent:(id)arg1 peerDidCompletePairing:(id)arg2 ;
-(void)pairingAgent:(id)arg1 peerDidFailToCompletePairing:(id)arg2 error:(id)arg3 ;
-(void)pairingAgent:(id)arg1 peerDidUnpair:(id)arg2 ;
-(void)peripheralDidUpdateName:(id)arg1 ;
-(void)peripheral:(id)arg1 didDiscoverServices:(id)arg2 ;
-(void)centralManager:(id)arg1 didUpdatePeripheralConnectionState:(id)arg2 ;
-(void)centralManagerDidUpdateState:(id)arg1 ;
-(void)centralManager:(id)arg1 didDiscoverPeripheral:(id)arg2 advertisementData:(id)arg3 RSSI:(id)arg4 ;
-(void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3 ;
-(BOOL)shouldReloadSpecifiersOnResume;
@end

