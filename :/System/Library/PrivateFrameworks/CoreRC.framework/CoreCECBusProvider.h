/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:51:10 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/CoreRC.framework/CoreRC
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreRC/CoreRC-Structs.h>
#import <CoreRC/CoreCECBus.h>
#import <libobjc.A.dylib/CECInterfaceDelegate.h>
#import <libobjc.A.dylib/CECBusPollingOperationDelegate.h>

@class CECInterface, CECBusPollingOperation, CoreCECDevice, NSString;

@interface CoreCECBusProvider : CoreCECBus <CECInterfaceDelegate, CECBusPollingOperationDelegate> {

	CECInterface* _interface;
	unsigned long long _streamPath;
	unsigned long long _previousStreamPath;
	CECBusPollingOperation* _pollingOperation;

}

@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> serialQueue; 
@property (assign,nonatomic) CoreCECDevice * activeSource; 
@property (assign,nonatomic) unsigned long long streamPath;                           //@synthesize streamPath=_streamPath - In the implementation block
@property (assign,nonatomic) unsigned long long previousStreamPath;                   //@synthesize previousStreamPath=_previousStreamPath - In the implementation block
@property (nonatomic,retain,readonly) CECInterface * interface;                       //@synthesize interface=_interface - In the implementation block
@property (nonatomic,retain) CECBusPollingOperation * pollingOperation;               //@synthesize pollingOperation=_pollingOperation - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)supportsSecureCoding;
-(BOOL)sendMessage:(id)arg1 error:(id*)arg2 ;
-(id)initWithCoder:(id)arg1 ;
-(void)dealloc;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(NSString *)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(Class)classForCoder;
-(CECInterface *)interface;
-(void)interfacePropertiesChanged:(id)arg1 ;
-(BOOL)setProperty:(id)arg1 forKey:(id)arg2 error:(id*)arg3 ;
-(id)propertyForKey:(id)arg1 error:(id*)arg2 ;
-(id)initWithInterface:(id)arg1 ;
-(void)updateAllowHibernation;
-(void)willRemoveDevice:(id)arg1 ;
-(id)initWithBus:(id)arg1 ;
-(id)initWithPhysicalAddress:(unsigned long long)arg1 ;
-(void)setOsdNameASCII:(CECOSDName)arg1 ;
-(void)setTvLanguageCodeASCII:(CECLanguage)arg1 ;
-(id)addDeviceWithType:(unsigned long long)arg1 error:(id*)arg2 ;
-(void)setSystemAudioModeStatus:(unsigned long long)arg1 ;
-(BOOL)linkStateChanged:(BOOL)arg1 error:(id*)arg2 ;
-(id)addDeviceWithLogicalAddress:(unsigned char)arg1 physicalAddress:(unsigned long long)arg2 deviceType:(unsigned long long)arg3 message:(id)arg4 reason:(unsigned long long)arg5 ;
-(void)interface:(id)arg1 receivedFrame:(CECFrame)arg2 ;
-(void)interface:(id)arg1 hibernationChanged:(BOOL)arg2 ;
-(unsigned long long)streamPath;
-(void)setStreamPath:(unsigned long long)arg1 ;
-(CECBusPollingOperation *)pollingOperation;
-(void)setPollingOperation:(CECBusPollingOperation *)arg1 ;
-(id)addDeviceWithLogicalAddress:(unsigned char)arg1 message:(id)arg2 reason:(unsigned long long)arg3 ;
-(id)destinationExpectedForMessage:(id)arg1 ;
-(BOOL)sendMessage:(id)arg1 withRetryCount:(unsigned char)arg2 error:(id*)arg3 ;
-(id)_cecErrorWithInterfaceError:(id)arg1 ;
-(id)destinationConfirmedForMessage:(id)arg1 ;
-(void)receivedMessage:(id)arg1 ;
-(BOOL)pollingOperation:(id)arg1 shouldSkipAddress:(unsigned char)arg2 ;
-(void)pollingOperationCompleted:(id)arg1 ;
-(void)pollingOperation:(id)arg1 deviceNotRespondingAtAddress:(unsigned char)arg2 ;
-(void)pollingOperation:(id)arg1 encounteredError:(id)arg2 forMessage:(id)arg3 ;
-(BOOL)refreshDevicesWithInitiator:(id)arg1 error:(id*)arg2 ;
-(void)setActiveSource:(CoreCECDevice *)arg1 ;
-(void)makeDeviceInactiveSource:(id)arg1 ;
-(unsigned long long)previousStreamPath;
-(void)setPreviousStreamPath:(unsigned long long)arg1 ;
-(NSObject*<OS_dispatch_queue>)serialQueue;
@end

