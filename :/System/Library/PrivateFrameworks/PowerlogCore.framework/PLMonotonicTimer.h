/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:54:09 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/PowerlogCore.framework/PowerlogCore
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSDate, NSObject, NSMutableSet, PLEntryNotificationOperatorComposition;

@interface PLMonotonicTimer : NSObject {

	NSDate* _monotonicFireDate;
	double _interval;
	NSObject*<OS_dispatch_queue> _queue;
	/*^block*/id _block;
	NSObject*<OS_dispatch_queue> _workQueue;
	NSMutableSet* _canceledFireDates;
	PLEntryNotificationOperatorComposition* _wakeEntryNotification;

}

@property (nonatomic,retain) NSDate * monotonicFireDate;                                        //@synthesize monotonicFireDate=_monotonicFireDate - In the implementation block
@property (assign) double interval;                                                             //@synthesize interval=_interval - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> queue;                                          //@synthesize queue=_queue - In the implementation block
@property (copy) id block;                                                                      //@synthesize block=_block - In the implementation block
@property (retain) NSObject*<OS_dispatch_queue> workQueue;                                      //@synthesize workQueue=_workQueue - In the implementation block
@property (retain) NSMutableSet * canceledFireDates;                                            //@synthesize canceledFireDates=_canceledFireDates - In the implementation block
@property (retain) PLEntryNotificationOperatorComposition * wakeEntryNotification;              //@synthesize wakeEntryNotification=_wakeEntryNotification - In the implementation block
+(id)scheduledTimerWithMonotonicFireDate:(id)arg1 withInterval:(double)arg2 withQueue:(id)arg3 withBlock:(/*^block*/id)arg4 ;
-(void)fire;
-(id)block;
-(void)setBlock:(id)arg1 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)cancel;
-(void)dealloc;
-(id)description;
-(void)schedule;
-(void)setInterval:(double)arg1 ;
-(double)interval;
-(void)_cancel;
-(void)setWorkQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)workQueue;
-(void)reschedule;
-(id)initWithMonotonicFireDate:(id)arg1 withInterval:(double)arg2 withQueue:(id)arg3 withBlock:(/*^block*/id)arg4 ;
-(void)_setMonotonicFireDate:(id)arg1 ;
-(void)timerFiredForMonotonicFireDate:(id)arg1 ;
-(NSDate *)monotonicFireDate;
-(NSMutableSet *)canceledFireDates;
-(void)setCanceledFireDates:(NSMutableSet *)arg1 ;
-(PLEntryNotificationOperatorComposition *)wakeEntryNotification;
-(void)setWakeEntryNotification:(PLEntryNotificationOperatorComposition *)arg1 ;
-(void)setMonotonicFireDate:(NSDate *)arg1 ;
@end

