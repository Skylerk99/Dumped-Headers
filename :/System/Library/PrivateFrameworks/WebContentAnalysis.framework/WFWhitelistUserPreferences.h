/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:55:54 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/WebContentAnalysis.framework/WebContentAnalysis
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class WFWhitelistSiteBuffer, NSString;

@interface WFWhitelistUserPreferences : NSObject {

	WFWhitelistSiteBuffer* filterWhitelist;
	WFWhitelistSiteBuffer* filterBlacklist;
	WFWhitelistSiteBuffer* webWhitelist;
	BOOL filterEnabled;
	BOOL whitelistEnabled;
	BOOL alwaysAllowHTTPS;
	NSString* username;

}

@property (assign) BOOL filterEnabled; 
@property (assign) BOOL whitelistEnabled; 
@property (assign) BOOL alwaysAllowHTTPS; 
@property (retain) NSString * username; 
@property (readonly) WFWhitelistSiteBuffer * filterWhitelist; 
@property (readonly) WFWhitelistSiteBuffer * filterBlacklist; 
@property (readonly) WFWhitelistSiteBuffer * webWhitelist; 
+(id)metasitesPath;
+(id)_arrayByConvertingLinesInStringsAtPath:(id)arg1 ;
+(id)metasitesExceptionPath;
+(id)_metasiteDomainNamesArray;
+(id)_sharedMetasiteDomainNamesDictionary;
+(id)_sharedMetasiteExceptionsDomainNamesArray;
+(id)preferencesPathForUsername:(id)arg1 ;
+(id)whitelistWithPreferences:(id)arg1 ;
+(id)_modificationDateForFileAtPath:(id)arg1 ;
+(id)_cachedWhitelistForPath:(id)arg1 username:(id)arg2 ;
+(BOOL)_isURLMetasite:(id)arg1 ;
+(id)whitelistForUser:(id)arg1 ;
+(id)defaultWhitelistForUser:(id)arg1 ;
-(void)dealloc;
-(id)init;
-(id)description;
-(id)initWithPreferences:(id)arg1 ;
-(void)setFilterEnabled:(BOOL)arg1 ;
-(void)setUsername:(NSString *)arg1 ;
-(NSString *)username;
-(BOOL)isURLAllowed:(id)arg1 reason:(id*)arg2 shouldFilter:(BOOL*)arg3 foundOnList:(BOOL*)arg4 ;
-(BOOL)isURL:(id)arg1 onList:(id)arg2 ;
-(BOOL)isURLAllowed:(id)arg1 ;
-(id)pronounceOnPageURLString:(id)arg1 shouldFilter:(BOOL*)arg2 ;
-(BOOL)filterEnabled;
-(BOOL)whitelistEnabled;
-(void)setWhitelistEnabled:(BOOL)arg1 ;
-(BOOL)alwaysAllowHTTPS;
-(void)setAlwaysAllowHTTPS:(BOOL)arg1 ;
-(WFWhitelistSiteBuffer *)filterWhitelist;
-(WFWhitelistSiteBuffer *)filterBlacklist;
-(WFWhitelistSiteBuffer *)webWhitelist;
@end

