/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:55:44 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <VectorKit/VectorKit-Structs.h>
@class NSMutableSet, NSMutableDictionary, NSMutableArray;

@interface VKLabelNavRoadGraph : NSObject {

	NSMutableSet* _tiles;
	NSMutableSet* _duplicateTiles;
	NSMutableDictionary* _tileDatasByIndex;
	NSMutableArray* _junctions;
	NSMutableArray* _intersections;
	BOOL _oppositeCarriagewayJunctionsValid;
	NSMutableArray* _oppositeCarriagewayJunctions;
	Matrix<float, 2, 1> _unitHeading;
	BOOL _offRouteJunctionsValid;
	Box<double, 2> _offRouteJunctionSelectRect;
	NSMutableArray* _offRouteJunctions;
	PolylineCoordinate _routeUserOffset;
	BOOL _routeFeatureMapValid;
	unordered_map<std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<NavRoadFeature> > > >* _routeFeatureMap;
	BOOL _simplifiedRouteValid;
	vector<gm::Matrix<double, 2, 1>, std::__1::allocator<gm::Matrix<double, 2, 1> > >* _simplifiedRoutePoints;
	unsigned long long _currentRoadStartSimplifiedPointIndex;
	BOOL _screenRouteValid;
	vector<RouteSegment, std::__1::allocator<RouteSegment> >* _screenRouteSegments;
	unsigned long long _firstPOIAligningRouteSegment;

}

@property (nonatomic,retain) NSMutableArray * junctions;              //@synthesize junctions=_junctions - In the implementation block
-(unsigned char)computeRoutePositionForPOIAtPixel:(const Matrix<float, 2, 1>*)arg1 currentPosition:(unsigned char)arg2 context:(NavContext*)arg3 ;
-(id)oppositeCarriagewayJunctions;
-(id)offRouteGraphJunctionsWithNavContext:(NavContext*)arg1 maxJunctions:(unsigned long long)arg2 isOnRoute:(BOOL)arg3 ;
-(void)addRouteRoadEdge:(const VKLabelNavRouteRoadEdge*)arg1 atA:(BOOL)arg2 isRouteRefineJunction:(BOOL)arg3 tile:(id)arg4 junctionList:(id)arg5 ;
-(BOOL)isPriorRouteCollinearWithRoad:(id)arg1 distance:(float)arg2 ;
-(BOOL)prepareOppositeCarriagewayJunctions;
-(unsigned long long)countReadyJunctionLists;
-(void)evaluateDualCarriagewayForJunction:(id)arg1 outputJunctionList:(id)arg2 ;
-(BOOL)isOnScreenRouteBackwardsAtJunction:(id)arg1 navContext:(NavContext*)arg2 ;
-(BOOL)collideRouteWithLabel:(id)arg1 routeCrossProduct:(float*)arg2 context:(NavContext*)arg3 ;
-(id)junctionListForDepth:(unsigned long long)arg1 ;
-(id)overpassJunctionForJunction:(id)arg1 ;
-(void)_transformRouteToScreenWithContext:(NavContext*)arg1 ;
-(void)_updateSimplifiedRoute;
-(void)_findOffRouteJunctions;
-(void)_updateIntersectionsForDepth:(unsigned long long)arg1 ;
-(BOOL)_checkIfDualCarriageWayConnectorRoad:(id)arg1 fromJunction:(id)arg2 toJunction:(id)arg3 checkShields:(BOOL)arg4 ;
-(void)dealloc;
-(void)reset;
-(NSMutableArray *)junctions;
-(void)setJunctions:(NSMutableArray *)arg1 ;
-(id)junctionForRoad:(id)arg1 nearJunction:(BOOL)arg2 crossTileEdge:(BOOL)arg3 ;
-(id)nextRoadSegmentForRoad:(id)arg1 ;
-(void)routeJunctionsHaveChanged;
-(id)initWithJunctions:(id)arg1 ;
-(void)startingLabelLayoutWithContext:(NavContext*)arg1 routeUserOffset:(PolylineCoordinate)arg2 ;
-(void)setTiles:(id)arg1 ;
-(id)_findInterTileJunctionForJunction:(id)arg1 ;
-(id)_junctionForRoadEdge:(const SCD_Struct_VK474*)arg1 atA:(BOOL)arg2 routeOffset:(PolylineCoordinate)arg3 tile:(id)arg4 ;
-(id)_nextIntersectionForRoad:(id)arg1 ;
@end

