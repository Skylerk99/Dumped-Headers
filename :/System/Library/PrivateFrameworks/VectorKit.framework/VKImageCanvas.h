/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:55:43 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/GGLImageCanvas.h>
#import <libobjc.A.dylib/VKWorldDelegate.h>
#import <libobjc.A.dylib/VKAnimationRunner.h>

@protocol VKInteractiveCameraController, VKImageCanvasDelegate;
@class VKWorld, VKCamera, VKLayoutContext, VKDispatch, VKTimer, GEOMapRegion, NSString;

@interface VKImageCanvas : GGLImageCanvas <VKWorldDelegate, VKAnimationRunner> {

	VKWorld* _world;
	VKCamera* _camera;
	id<VKInteractiveCameraController> _cameraController;
	VKLayoutContext* _layoutContext;
	VKDispatch* _dispatch;
	long long _mapType;
	unique_ptr<md::RenderTree, std::__1::default_delete<md::RenderTree> >* _mapScene;
	unique_ptr<md::MapCamera, std::__1::default_delete<md::MapCamera> >* _mapCamera;
	unique_ptr<md::RenderQueue, std::__1::default_delete<md::RenderQueue> >* _renderQueue;
	id<VKImageCanvasDelegate> _delegate;
	VKTimer* _layoutTimer;
	BOOL _shouldDrawWhileLoading;
	double _frameTimestamp;
	BOOL _needsLayout;
	unique_ptr<ggl::RenderQueue, std::__1::default_delete<ggl::RenderQueue> >* _renderQueueResolve;
	unique_ptr<(anonymous namespace)::YFlipPass, std::__1::default_delete<(anonymous namespace)::YFlipPass> >* _yFlipPass;

}

@property (nonatomic,readonly) VKWorld * world;                               //@synthesize world=_world - In the implementation block
@property (nonatomic,readonly) VKCamera * camera;                             //@synthesize camera=_camera - In the implementation block
@property (nonatomic,readonly) VKDispatch * dispatch;                         //@synthesize dispatch=_dispatch - In the implementation block
@property (nonatomic,readonly) GEOMapRegion * mapRegion; 
@property (nonatomic,readonly) double pitch; 
@property (nonatomic,readonly) double yaw; 
@property (assign,nonatomic) id<VKImageCanvasDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) long long mapType;                               //@synthesize mapType=_mapType - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(double)yaw;
-(void)runAnimation:(id)arg1 ;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 ;
-(void)setCenterCoordinate:(CGSize)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 ;
-(void)cancelLoad;
-(void)setDelegate:(id<VKImageCanvasDelegate>)arg1 ;
-(void)dealloc;
-(id<VKImageCanvasDelegate>)delegate;
-(void)setSize:(CGSize)arg1 ;
-(void)animationDidStop:(id)arg1 ;
-(void)update;
-(void)didReceiveMemoryWarning:(BOOL)arg1 ;
-(GEOMapRegion *)mapRegion;
-(long long)mapType;
-(void)setMapType:(long long)arg1 ;
-(VKCamera *)camera;
-(double)pitch;
-(void)clearScene;
-(void)cancelTileRequests;
-(VKWorld *)world;
-(void)animationDidResume:(id)arg1 ;
-(void)worldLayoutDidChange:(id)arg1 ;
-(void)worldDisplayDidChange:(id)arg1 ;
-(id)initWithSize:(CGSize)arg1 scale:(double)arg2 useMultisampling:(BOOL)arg3 device:(const shared_ptr<ggl::Device>Ref)arg4 homeQueue:(id)arg5 ;
-(void)loadScene;
-(void)renderSceneWithRenderer:(Renderer*)arg1 completion:(/*^block*/id)arg2 ;
-(VKDispatch *)dispatch;
-(void)didLayout;
-(void)_spinScene:(id)arg1 ;
-(void)_spinSceneWillRender:(BOOL)arg1 ;
@end

