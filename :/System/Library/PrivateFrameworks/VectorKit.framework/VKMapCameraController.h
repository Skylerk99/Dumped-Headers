/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:55:39 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <VectorKit/VectorKit-Structs.h>
#import <VectorKit/VKScreenCameraController.h>
#import <libobjc.A.dylib/VKTrackingCameraControllerDelegate.h>
#import <libobjc.A.dylib/VKInteractiveCameraController.h>

@class GEOMapRegion, VKMapModel, VKMapCanvas, VKTimedAnimation, VKTrackingCameraController, NSString;

@interface VKMapCameraController : VKScreenCameraController <VKTrackingCameraControllerDelegate, VKInteractiveCameraController> {

	VKMapModel* _mapModel;
	VKMapCanvas* _mapCanvas;
	VKTimedAnimation* _horizontalOffsetAnimation;
	VKTrackingCameraController* _trackingCameraController;
	double _minDistanceToGroundAlongForwardVector;
	double _maxDistanceToGroundAlongForwardVector;
	double _canonicalSkyHeight;
	double _tracePlaybackSpeedMultiplier;
	BOOL _shouldLimitTrackingCameraHeight;
	int _trackingCameraPanStyle;
	double _userZoomFocusStyleGroundspanMeters;
	double _userZoomFocusStyleMinGroundspanMeters;
	double _userZoomFocusStyleMaxGroundspanMeters;
	double _cameraHorizontalOffset;
	double _finalYaw;
	double _finalPitch;
	float _navigationPuckSize;
	BOOL _pinching;
	CGPoint _pinchStartFocusPoint;
	BOOL _pitching;
	CGPoint _pitchStartFocusPoint;
	BOOL _panning;

}

@property (nonatomic,retain) VKMapModel * mapModel;                                     //@synthesize mapModel=_mapModel - In the implementation block
@property (assign,nonatomic) VKMapCanvas * mapCanvas;                                   //@synthesize mapCanvas=_mapCanvas - In the implementation block
@property (assign,nonatomic) BOOL allowDatelineWraparound; 
@property (assign,nonatomic) double canonicalSkyHeight;                                 //@synthesize canonicalSkyHeight=_canonicalSkyHeight - In the implementation block
@property (assign,nonatomic) BOOL shouldLimitTrackingCameraHeight;                      //@synthesize shouldLimitTrackingCameraHeight=_shouldLimitTrackingCameraHeight - In the implementation block
@property (assign,nonatomic) int trackingCameraPanStyle;                                //@synthesize trackingCameraPanStyle=_trackingCameraPanStyle - In the implementation block
@property (assign,nonatomic) double trackingZoomScale; 
@property (assign,nonatomic) double tracePlaybackSpeedMultiplier;                       //@synthesize tracePlaybackSpeedMultiplier=_tracePlaybackSpeedMultiplier - In the implementation block
@property (assign,nonatomic) double userZoomFocusStyleGroundspanMeters; 
@property (assign,nonatomic) double userZoomFocusStyleMinGroundspanMeters; 
@property (assign,nonatomic) double userZoomFocusStyleMaxGroundspanMeters; 
@property (assign,nonatomic) float navigationPuckSize;                                  //@synthesize navigationPuckSize=_navigationPuckSize - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) VKPoint centerCoordinate; 
@property (nonatomic,readonly) double yaw; 
@property (nonatomic,readonly) double presentationYaw; 
@property (nonatomic,readonly) double pitch; 
@property (nonatomic,readonly) GEOMapRegion * mapRegion; 
@property (nonatomic,readonly) GEOMapRegion * mapRegionOfInterest; 
-(void)animateToMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 completion:(/*^block*/id)arg5 ;
-(void)updatePanWithTranslation:(CGPoint)arg1 ;
-(BOOL)restoreViewportFromInfo:(id)arg1 ;
-(void)enter3DMode;
-(void)setYaw:(double)arg1 animated:(BOOL)arg2 ;
-(double)durationToAnimateToMapRegion:(id)arg1 ;
-(void)startTrackingAnnotation:(id)arg1 trackHeading:(BOOL)arg2 animated:(BOOL)arg3 ;
-(double)yaw;
-(void)setAllowDatelineWraparound:(BOOL)arg1 ;
-(void)exit3DMode;
-(double)presentationYaw;
-(BOOL)canEnter3DMode;
-(BOOL)allowDatelineWraparound;
-(void)setTracePlaybackSpeedMultiplier:(double)arg1 ;
-(void)stopPanningAtPoint:(CGPoint)arg1 ;
-(GEOMapRegion *)mapRegionOfInterest;
-(void)panWithOffset:(CGPoint)arg1 relativeToScreenPoint:(CGPoint)arg2 animated:(BOOL)arg3 duration:(double)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)setGesturing:(BOOL)arg1 ;
-(void)zoom:(double)arg1 withFocusPoint:(CGPoint)arg2 completionHandler:(/*^block*/id)arg3 ;
-(BOOL)isPitched;
-(void)puckAnimator:(id)arg1 updatedPosition:(SCD_Struct_VK26*)arg2 ;
-(void)puckAnimator:(id)arg1 updatedTargetPosition:(VKPoint)arg2 ;
-(void)puckAnimatorDidStop:(id)arg1 ;
-(BOOL)currentZoomLevelAllowsRotation;
-(void)startRotatingWithFocusPoint:(CGPoint)arg1 ;
-(void)updatePinchWithFocusPoint:(CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3 ;
-(BOOL)isFullyPitched;
-(void)stopPinchingWithFocusPoint:(CGPoint)arg1 ;
-(void)startPinchingWithFocusPoint:(CGPoint)arg1 ;
-(void)updatePitchWithFocusPoint:(CGPoint)arg1 translation:(double)arg2 ;
-(void)startPitchingWithFocusPoint:(CGPoint)arg1 ;
-(void)stopPitchingWithFocusPoint:(CGPoint)arg1 ;
-(void)updateRotationWithFocusPoint:(CGPoint)arg1 newValue:(double)arg2 ;
-(void)stopRotatingWithFocusPoint:(CGPoint)arg1 ;
-(void)dealloc;
-(id)init;
-(BOOL)isTracking;
-(long long)tileSize;
-(void)setEdgeInsets:(VKEdgeInsets)arg1 ;
-(GEOMapRegion *)mapRegion;
-(double)altitude;
-(id)viewportInfo;
-(VKPoint)centerCoordinate;
-(id)detailedDescription;
-(double)pitch;
-(double)userZoomFocusStyleGroundspanMeters;
-(void)setTrackingCameraPanStyle:(int)arg1 ;
-(int)trackingCameraPanStyle;
-(void)setCameraHorizontalOffset:(double)arg1 duration:(double)arg2 timingFunction:(id)arg3 ;
-(void)updateCameraContext:(id)arg1 ;
-(void)setUserZoomFocusStyleGroundspanMeters:(double)arg1 ;
-(void)setShouldLimitTrackingCameraHeight:(BOOL)arg1 ;
-(double)trackingZoomScale;
-(double)userZoomFocusStyleMaxGroundspanMeters;
-(void)edgeInsetsDidEndAnimating;
-(void)startPanningAtPoint:(CGPoint)arg1 panAtStartPoint:(BOOL)arg2 ;
-(void)zoomToLevel:(double)arg1 withFocusPoint:(CGPoint)arg2 ;
-(void)setCenterCoordinate:(CGSize)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 animationStyle:(long long)arg6 timingCurve:(/*^block*/id)arg7 completion:(/*^block*/id)arg8 ;
-(void)setMapRegion:(id)arg1 pitch:(double)arg2 yaw:(double)arg3 animated:(BOOL)arg4 completion:(/*^block*/id)arg5 ;
-(void)setUserZoomFocusStyleMaxGroundspanMeters:(double)arg1 ;
-(void)setCanonicalSkyHeight:(double)arg1 ;
-(void)setCenterCoordinate3D:(VKPoint)arg1 altitude:(double)arg2 yaw:(double)arg3 pitch:(double)arg4 duration:(double)arg5 animationStyle:(long long)arg6 timingCurve:(/*^block*/id)arg7 completion:(/*^block*/id)arg8 ;
-(VKMapCanvas *)mapCanvas;
-(void)setTrackingZoomScale:(double)arg1 ;
-(double)userZoomFocusStyleMinGroundspanMeters;
-(void)setUserZoomFocusStyleMinGroundspanMeters:(double)arg1 ;
-(void)edgeInsetsWillBeginAnimating;
-(void)pauseCameraMotion;
-(void)setNavigationPuckSize:(float)arg1 ;
-(BOOL)isAtDefaultTrackingZoomScale;
-(BOOL)trackingCanZoomIn;
-(void)canvasFrameDidChange;
-(void)startCameraMotionAnimated:(BOOL)arg1 pounceCompletionHandler:(/*^block*/id)arg2 ;
-(float)currentMaximumNormalizedZoomLevel;
-(void)updatedMatchedSection:(fast_shared_ptr<vk::RouteLineSection>*)arg1 index:(PolylineCoordinate*)arg2 ;
-(VKPoint)groundPointFromScreenPoint:(CGPoint)arg1 ;
-(float)currentTopDownMinimumNormalizedZoomLevel;
-(float)currentNormalizedZoomLevel;
-(BOOL)trackingCanZoomOut;
-(void)setMapCanvas:(VKMapCanvas *)arg1 ;
-(void)setMapModel:(VKMapModel *)arg1 ;
-(void)stopCameraMotion;
-(float)normalizedZoomLevelAdjustmentForTileSize:(long long)arg1 ;
-(BOOL)clampZoomLevelIfNecessary;
-(float)currentMinimumNormalizedZoomLevel;
-(BOOL)updateCameraToPositionOrientationLimits;
-(float)navigationPuckSize;
-(void)canvasDidLayout;
-(VKMapModel *)mapModel;
-(double)canonicalSkyHeight;
-(void)updateCameraZBounds;
-(float)maxPitchForNormalizedZoomLevel:(float)arg1 ;
-(long long)maximumNormalizedZoomLevel;
-(CGPoint)_centerScreenPoint;
-(double)tracePlaybackSpeedMultiplier;
-(float)idealPitchForNormalizedZoomLevel:(float)arg1 ;
-(void)clampPitch:(double*)arg1 yaw:(double*)arg2 atTargetPositionZ:(double)arg3 ;
-(void)_animateToPosition:(VKPoint)arg1 pitch:(double)arg2 yaw:(double)arg3 duration:(double)arg4 timingCurve:(/*^block*/id)arg5 completion:(/*^block*/id)arg6 ;
-(void)pinch:(CGPoint)arg1 oldFactor:(double)arg2 newFactor:(double)arg3 ;
-(void)zoomToLevel:(double)arg1 withPoint:(VKPoint)arg2 ;
-(void)tapZoom:(CGPoint)arg1 levels:(double)arg2 completionHandler:(/*^block*/id)arg3 ;
-(float)currentDisplayZoomLevel;
-(void)pan:(CGPoint)arg1 ;
-(void)pitch:(CGPoint)arg1 translation:(double)arg2 ;
-(float)currentStyleZoomLevel;
-(BOOL)snapMapIfNecessary:(const VKPoint*)arg1 animated:(BOOL)arg2 ;
-(id)_mapRegionIgnoringFarAmount:(double)arg1 ;
-(void)zoom:(double)arg1 withPoint:(VKPoint)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)rotateToPitch:(double)arg1 withPoint:(const VKPoint*)arg2 preserveAltitude:(BOOL)arg3 animated:(BOOL)arg4 exaggerate:(BOOL)arg5 ;
-(CGSize)_mercatorCenterCoordinateForMapRegion:(id)arg1 ;
-(BOOL)canEnter3DModeNoUpdate;
-(BOOL)shouldLimitTrackingCameraHeight;
-(long long)minimumNormalizedZoomLevel;
-(float)minimumPitchForNormalizedZoomLevel:(float)arg1 ;
-(void)rotateToYaw:(double)arg1 withPoint:(const VKPoint*)arg2 animated:(BOOL)arg3 ;
-(CGPoint)_scaledScreenPointForPoint:(CGPoint)arg1 ;
-(void)rotate:(double)arg1 atScreenPoint:(CGPoint)arg2 ;
-(void)trackingCameraController:(id)arg1 updatedStartAnimationTargetPosition:(VKPoint)arg2 orientation:(const SCD_Struct_VK6*)arg3 ;
@end

