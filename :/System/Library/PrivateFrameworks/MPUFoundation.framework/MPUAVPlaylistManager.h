/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:52:59 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/MPUFoundation.framework/MPUFoundation
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MPUFoundation/MPUFoundation-Structs.h>
#import <MediaPlayer/MPAVPlaylistManager.h>
#import <MPUFoundation/MPUQueueBehaviorManaging.h>

@class NSMutableIndexSet, MPMutableBidirectionalDictionary, MPQueueFeeder, NSMutableArray, MPAVItem, NSMutableDictionary, NSString;

@interface MPUAVPlaylistManager : MPAVPlaylistManager <MPUQueueBehaviorManaging> {

	BOOL _ignoreNextIndexChanges;
	BOOL _disableSoftQueueFaulting;
	unsigned long long _maximumModifiedPlaylistIterationIndex;
	unsigned long long _minimumPlaylistIndex;
	unsigned long long _maximumPlaylistIndex;
	NSMutableIndexSet* _failedSoftQueueIndexes;
	MPMutableBidirectionalDictionary* _identifiersToIndexes;
	BOOL _disableQueueModifications;
	MPQueueFeeder* _softQueueFeeder;
	NSMutableArray* _hardQueueSourceContexts;
	MPAVItem* _lastPlayedSoftQueueItem;
	long long _nextCurrentIndex;
	long long _hardQueueInsertionIndex;
	long long _repeatStartIndex;
	NSMutableDictionary* _iterationIndexToQueueModifications;

}

@property (nonatomic,readonly) NSRange hardQueuePlaylistIndexRange; 
@property (nonatomic,readonly) NSRange softQueuePlaylistIndexRange; 
@property (nonatomic,retain) MPQueueFeeder * softQueueFeeder;                                       //@synthesize softQueueFeeder=_softQueueFeeder - In the implementation block
@property (assign,nonatomic) BOOL disableQueueModifications;                                        //@synthesize disableQueueModifications=_disableQueueModifications - In the implementation block
@property (nonatomic,retain) NSMutableArray * hardQueueSourceContexts;                              //@synthesize hardQueueSourceContexts=_hardQueueSourceContexts - In the implementation block
@property (nonatomic,retain) MPAVItem * lastPlayedSoftQueueItem;                                    //@synthesize lastPlayedSoftQueueItem=_lastPlayedSoftQueueItem - In the implementation block
@property (assign,nonatomic) long long nextCurrentIndex;                                            //@synthesize nextCurrentIndex=_nextCurrentIndex - In the implementation block
@property (assign,nonatomic) long long hardQueueInsertionIndex;                                     //@synthesize hardQueueInsertionIndex=_hardQueueInsertionIndex - In the implementation block
@property (assign,nonatomic) long long repeatStartIndex;                                            //@synthesize repeatStartIndex=_repeatStartIndex - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * iterationIndexToQueueModifications;              //@synthesize iterationIndexToQueueModifications=_iterationIndexToQueueModifications - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) BOOL allowsUserVisibleUpcomingItems; 
@property (nonatomic,readonly) BOOL canSeek; 
@property (nonatomic,readonly) BOOL canSkipToPreviousItem; 
@property (nonatomic,readonly) long long playbackMode; 
@property (nonatomic,readonly) BOOL userCanChangeShuffleAndRepeatType; 
-(void)setRepeatMode:(long long)arg1 ;
-(void)queueFeeder:(id)arg1 didChangeContentsWithPreferredStartIndex:(unsigned long long)arg2 error:(id)arg3 ;
-(void)queueFeeder:(id)arg1 didChangeContentsWithReplacementPlaybackContext:(id)arg2 ;
-(BOOL)canSkipToPreviousItem;
-(BOOL)userCanChangeShuffleAndRepeatType;
-(id)playlistFeeder;
-(void)setCurrentIndex:(long long)arg1 selectionDirection:(long long)arg2 ;
-(long long)playlistIndexWithDelta:(long long)arg1 fromIndex:(long long)arg2 ignoreElapsedTime:(BOOL)arg3 ;
-(long long)playlistIndexOfItemIdentifier:(id)arg1 ;
-(void)queueCoordinator:(id)arg1 failedToLoadItem:(id)arg2 ;
-(id)queueCoordinator:(id)arg1 itemToFollowItem:(id)arg2 ;
-(unsigned long long)displayIndexForItem:(id)arg1 ;
-(id)playlistFeederForPlaylistIndex:(long long)arg1 ;
-(id)itemForPlaylistIndex:(long long)arg1 ;
-(unsigned long long)displayCountForItem:(id)arg1 ;
-(long long)playlistIndexOfIndex:(long long)arg1 inPlaylistFeeder:(id)arg2 ;
-(void)player:(id)arg1 currentItemDidChangeFromItem:(id)arg2 toItem:(id)arg3 ;
-(BOOL)setPlaylistFeeder:(id)arg1 startIndex:(long long)arg2 keepPlaying:(BOOL)arg3 ;
-(long long)_prepareToQueuePlaybackIndex:(long long)arg1 selectionDirection:(long long)arg2 ;
-(void)_willFinishReloadWithQueueFeeder:(id)arg1 fromPlaybackContext:(id)arg2 ;
-(id)metadataItemForPlaylistIndex:(long long)arg1 ;
-(long long)playlistIndexOfItem:(id)arg1 ;
-(long long)playlistIndexOfQueueIdentifier:(id)arg1 inPlaylistFeeder:(id)arg2 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)init;
-(void)_commonInit;
-(long long)currentIndex;
-(BOOL)disableQueueModifications;
-(BOOL)preventsHardQueueModificationsForItem:(id)arg1 ;
-(void)addPlaybackContext:(id)arg1 toHardQueueWithInsertionType:(long long)arg2 ;
-(void)addPlaybackContext:(id)arg1 toHardQueueWithInsertionType:(long long)arg2 completionHandler:(/*^block*/id)arg3 ;
-(NSRange)hardQueuePlaylistIndexRange;
-(void)setDisableQueueModifications:(BOOL)arg1 ;
-(void)removeItemAtPlaybackIndex:(long long)arg1 ;
-(void)moveItemAtPlaybackIndex:(long long)arg1 toPlaybackIndex:(long long)arg2 intoHardQueue:(BOOL)arg3 ;
-(MPQueueFeeder *)softQueueFeeder;
-(void)clearHardQueue;
-(void)clearSoftQueue;
-(NSRange)softQueuePlaylistIndexRange;
-(void)_handleConfiguredQueueFeeder:(id)arg1 fromPlaybackContext:(id)arg2 ;
-(id)identifierAtIndex:(unsigned long long)arg1 queueFeeder:(id)arg2 ;
-(BOOL)_itemIsHardQueueItem:(id)arg1 ;
-(BOOL)_itemIsSoftQueueItem:(id)arg1 ;
-(NSRange)_softQueuePlaylistIndexRangeIncludingCurrentItem:(BOOL)arg1 ;
-(id)_sourceContextForPlaylistIndex:(unsigned long long)arg1 ;
-(id)_playlistIterationForQueueFeeder:(id)arg1 firstItemPlaylistIndex:(unsigned long long)arg2 iterationIndex:(unsigned long long)arg3 ;
-(void)_insertSoftQueueSourceContext:(id)arg1 atIndex:(long long)arg2 ;
-(NSRange)_hardQueuePlaylistIndexRangeIncludingCurrentItem:(BOOL)arg1 ;
-(long long)_hardQueueIndexForIndex:(long long)arg1 ;
-(id)_removeSoftQueueSourceContextAtIndex:(long long)arg1 ;
-(id)_itemForSourceContext:(id)arg1 ;
-(id)_metadataItemForSourceContext:(id)arg1 ;
-(id)_softQueueSourceContextForIndex:(long long)arg1 ;
-(unsigned long long)indexOfItemWithIdentifier:(id)arg1 queueFeeder:(id)arg2 ;
-(void)_findPlaylistIterationForPlaybackIndex:(unsigned long long)arg1 createIfNecessary:(BOOL)arg2 completionHandler:(/*^block*/id)arg3 ;
-(long long)_softQueueIndexForIndex:(long long)arg1 ;
-(id)_queueFeeder:(id)arg1 itemForIdentifier:(id)arg2 ;
-(unsigned long long)playlistItemCount;
-(void)setSoftQueueFeeder:(MPQueueFeeder *)arg1 ;
-(NSMutableArray *)hardQueueSourceContexts;
-(void)setHardQueueSourceContexts:(NSMutableArray *)arg1 ;
-(MPAVItem *)lastPlayedSoftQueueItem;
-(void)setLastPlayedSoftQueueItem:(MPAVItem *)arg1 ;
-(long long)nextCurrentIndex;
-(void)setNextCurrentIndex:(long long)arg1 ;
-(long long)hardQueueInsertionIndex;
-(void)setHardQueueInsertionIndex:(long long)arg1 ;
-(long long)repeatStartIndex;
-(void)setRepeatStartIndex:(long long)arg1 ;
-(NSMutableDictionary *)iterationIndexToQueueModifications;
-(void)setIterationIndexToQueueModifications:(NSMutableDictionary *)arg1 ;
@end

