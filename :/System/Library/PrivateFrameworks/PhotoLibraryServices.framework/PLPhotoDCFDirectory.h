/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:54:02 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/PhotoLibraryServices.framework/PhotoLibraryServices
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PhotoLibraryServices/PhotoLibraryServices-Structs.h>
#import <PhotoLibraryServices/PLPhotoDCFObject.h>

@class PLPhotoDCIMDirectory;

@interface PLPhotoDCFDirectory : PLPhotoDCFObject {

	PLPhotoDCIMDirectory* _dcimDirectory;
	CFDictionaryRef _fileGroupsByNumber;
	int _maxFileGroupNumber;
	int _lastUsedFileGroupNumber;
	BOOL _considerInvalidFileGroups;

}

@property (assign) BOOL considerInvalidFileGroups;              //@synthesize considerInvalidFileGroups=_considerInvalidFileGroups - In the implementation block
+(void)initializeFileGroupPrefixAndExtensions;
+(id)fileGroupRequiredEmptyPrefixes;
+(id)fileGroupRequiredEmptyExtensions;
-(void)dealloc;
-(id)dcimDirectory;
-(id)nextAvailableFileGroup;
-(void)ensureDirectoryExists;
-(id)_lastUsedFileGroupUserInfoKey;
-(unsigned)_calculateBaseDirectoryValue;
-(id)fullPath;
-(BOOL)canAddFileGroupWithGroupNumber:(int)arg1 ;
-(id)fileGroups;
-(BOOL)_canAddItemWithPrefix:(id)arg1 minimumFileGroupNumber:(int)arg2 ;
-(BOOL)_canAddItemWithPrefix:(id)arg1 ;
-(BOOL)isEntensionValid:(id)arg1 ;
-(BOOL)considerInvalidFileGroups;
-(id)_nextAvailableFileGroupWithPrefix:(id)arg1 extension:(id)arg2 ;
-(id)initWithName:(id)arg1 number:(int)arg2 dcimDirectory:(id)arg3 ;
-(BOOL)canAddImage;
-(BOOL)canAddVideo;
-(id)nextAvailableVideoFileGroupWithExtension:(id)arg1 ;
-(void)removeFileGroup:(id)arg1 ;
-(void)setWriteIsPending:(BOOL)arg1 ;
-(void)setConsiderInvalidFileGroups:(BOOL)arg1 ;
@end

