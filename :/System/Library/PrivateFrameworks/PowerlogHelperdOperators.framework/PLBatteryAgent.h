/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:54:10 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/PowerlogHelperdOperators.framework/PowerlogHelperdOperators
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <PowerlogHelperdOperators/PowerlogHelperdOperators-Structs.h>
#import <PowerlogCore/PLAgent.h>

@class PLIOKitOperatorComposition, PLEntryNotificationOperatorComposition, PLSemaphore, PLTimer, PLMonotonicTimer, NSString, NSNumber, PLXPCResponderOperatorComposition;

@interface PLBatteryAgent : PLAgent {

	BOOL _allowGasGaugeRead;
	BOOL _deviceIsPluggedIn;
	BOOL _isEABatteryConnected;
	int _gasGaugeConsecutiveEmptyEntriesCount;
	PLIOKitOperatorComposition* _iokit;
	PLEntryNotificationOperatorComposition* _canSleepEntryNotifications;
	PLSemaphore* _canSleepSemaphore;
	PLEntryNotificationOperatorComposition* _wakeEntryNotifications;
	PLTimer* _gasGaugeTimer;
	ggcontextRef _gasGagueConnection;
	double _batteryLevelPercent;
	double _rawBatteryVoltageVolt;
	PLTimer* _EABatteryTimer;
	PLMonotonicTimer* _significantBatteryChangeTimer;
	NSString* _entryKeyEABattery;
	double _EAEnergyDrained;
	NSNumber* _lastkIOPSAppleBatteryCaseCumulativeCurrentKey;
	PLXPCResponderOperatorComposition* _batteryInfoResponder;

}

@property (readonly) PLIOKitOperatorComposition * iokit;                                               //@synthesize iokit=_iokit - In the implementation block
@property (readonly) PLEntryNotificationOperatorComposition * canSleepEntryNotifications;              //@synthesize canSleepEntryNotifications=_canSleepEntryNotifications - In the implementation block
@property (retain) PLSemaphore * canSleepSemaphore;                                                    //@synthesize canSleepSemaphore=_canSleepSemaphore - In the implementation block
@property (readonly) PLEntryNotificationOperatorComposition * wakeEntryNotifications;                  //@synthesize wakeEntryNotifications=_wakeEntryNotifications - In the implementation block
@property (retain) PLTimer * gasGaugeTimer;                                                            //@synthesize gasGaugeTimer=_gasGaugeTimer - In the implementation block
@property (assign) ggcontextRef gasGagueConnection;                                                    //@synthesize gasGagueConnection=_gasGagueConnection - In the implementation block
@property (assign) int gasGaugeConsecutiveEmptyEntriesCount;                                           //@synthesize gasGaugeConsecutiveEmptyEntriesCount=_gasGaugeConsecutiveEmptyEntriesCount - In the implementation block
@property (assign) BOOL allowGasGaugeRead;                                                             //@synthesize allowGasGaugeRead=_allowGasGaugeRead - In the implementation block
@property (assign) BOOL deviceIsPluggedIn;                                                             //@synthesize deviceIsPluggedIn=_deviceIsPluggedIn - In the implementation block
@property (assign) double batteryLevelPercent;                                                         //@synthesize batteryLevelPercent=_batteryLevelPercent - In the implementation block
@property (assign) double rawBatteryVoltageVolt;                                                       //@synthesize rawBatteryVoltageVolt=_rawBatteryVoltageVolt - In the implementation block
@property (assign) BOOL isEABatteryConnected;                                                          //@synthesize isEABatteryConnected=_isEABatteryConnected - In the implementation block
@property (retain) PLTimer * EABatteryTimer;                                                           //@synthesize EABatteryTimer=_EABatteryTimer - In the implementation block
@property (retain) PLMonotonicTimer * significantBatteryChangeTimer;                                   //@synthesize significantBatteryChangeTimer=_significantBatteryChangeTimer - In the implementation block
@property (readonly) NSString * entryKeyEABattery;                                                     //@synthesize entryKeyEABattery=_entryKeyEABattery - In the implementation block
@property (assign) double EAEnergyDrained;                                                             //@synthesize EAEnergyDrained=_EAEnergyDrained - In the implementation block
@property (retain) NSNumber * lastkIOPSAppleBatteryCaseCumulativeCurrentKey;                           //@synthesize lastkIOPSAppleBatteryCaseCumulativeCurrentKey=_lastkIOPSAppleBatteryCaseCumulativeCurrentKey - In the implementation block
@property (retain) PLXPCResponderOperatorComposition * batteryInfoResponder;                           //@synthesize batteryInfoResponder=_batteryInfoResponder - In the implementation block
+(id)defaults;
+(void)load;
+(id)entryEventPointDefinitions;
+(id)entryEventForwardDefinitions;
+(id)entryEventBackwardDefinitions;
+(id)entryEventIntervalDefinitions;
+(id)entryEventIntervalDefinitionGasGauge;
+(id)entryEventPointDefinitionGasGaugeReconnect;
+(id)entryEventBackwardDefinitionBattery;
+(id)entryEventBackwardDefinitionEABattery;
+(id)entryEventBackwardDefinitionBatteryUI;
-(void)dealloc;
-(id)init;
-(void)log;
-(BOOL)deviceIsPluggedIn;
-(void)setDeviceIsPluggedIn:(BOOL)arg1 ;
-(void)initOperatorDependancies;
-(PLSemaphore *)canSleepSemaphore;
-(void)setCanSleepSemaphore:(PLSemaphore *)arg1 ;
-(PLEntryNotificationOperatorComposition *)wakeEntryNotifications;
-(void)setBatteryLevelPercent:(double)arg1 ;
-(void)setRawBatteryVoltageVolt:(double)arg1 ;
-(double)rawBatteryVoltageVolt;
-(void)setAllowGasGaugeRead:(BOOL)arg1 ;
-(void)logEventIntervalGasGauge;
-(BOOL)gasGaugeOpenAndStartLogging;
-(void)fakeLogEntry:(id)arg1 ;
-(void)accessoryConnected:(id)arg1 ;
-(void)accessoryDisconnected:(id)arg1 ;
-(void)refreshEABatteryStatus;
-(BOOL)gasGaugeStopLoggingAndClose;
-(BOOL)isEABatteryConnectedNow;
-(void)setIsEABatteryConnected:(BOOL)arg1 ;
-(BOOL)isEABatteryConnected;
-(void)setupEALogging;
-(void)cancelEALogging;
-(PLTimer *)EABatteryTimer;
-(void)logEABatteryStatistics;
-(void)setEABatteryTimer:(PLTimer *)arg1 ;
-(void)setSignificantBatteryChangeTimer:(PLMonotonicTimer *)arg1 ;
-(PLMonotonicTimer *)significantBatteryChangeTimer;
-(void)setLastkIOPSAppleBatteryCaseCumulativeCurrentKey:(NSNumber *)arg1 ;
-(BOOL)didEABatteryIDMatchInPowerSources:(id)arg1 ;
-(NSString *)entryKeyEABattery;
-(NSNumber *)lastkIOPSAppleBatteryCaseCumulativeCurrentKey;
-(double)EAEnergyDrained;
-(void)setEAEnergyDrained:(double)arg1 ;
-(void)setBatteryInfoResponder:(PLXPCResponderOperatorComposition *)arg1 ;
-(void)logEventBackwardBattery;
-(BOOL)allowGasGaugeRead;
-(void)gasGaugeRead;
-(PLIOKitOperatorComposition *)iokit;
-(ggcontextRef)gasGagueConnection;
-(void)setGasGagueConnection:(ggcontextRef)arg1 ;
-(double)batteryLevelPercent;
-(BOOL)givePluggedInFreePass;
-(void)setGasGaugeConsecutiveEmptyEntriesCount:(int)arg1 ;
-(int)gasGaugeConsecutiveEmptyEntriesCount;
-(PLEntryNotificationOperatorComposition *)canSleepEntryNotifications;
-(PLTimer *)gasGaugeTimer;
-(void)setGasGaugeTimer:(PLTimer *)arg1 ;
-(PLXPCResponderOperatorComposition *)batteryInfoResponder;
@end

