/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, April 19, 2016 at 11:52:23 AM Mountain Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /System/Library/PrivateFrameworks/HealthDaemon.framework/HealthDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HealthDaemon/HealthDaemon-Structs.h>
#import <libobjc.A.dylib/HDSQLiteEntity.h>

@class NSString;

@interface HDSQLiteEntity : NSObject <HDSQLiteEntity> {

	long long _persistentID;

}

@property (nonatomic,readonly) long long persistentID;              //@synthesize persistentID=_persistentID - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)aggregateValuesForProperty:(id)arg1 functions:(id)arg2 predicate:(id)arg3 groupBy:(id)arg4 database:(id)arg5 error:(id*)arg6 ;
+(id)anyInDatabase:(id)arg1 predicate:(id)arg2 error:(id*)arg3 ;
+(id)queryWithDatabase:(id)arg1 predicate:(id)arg2 limit:(unsigned long long)arg3 orderingProperties:(id)arg4 orderingDirections:(id)arg5 ;
+(BOOL)enumerateQueryResultsFromColumns:(id)arg1 properties:(id)arg2 predicate:(id)arg3 database:(id)arg4 error:(id*)arg5 usingBlock:(/*^block*/id)arg6 ;
+(id)distinctProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 error:(id*)arg4 ;
+(id)aggregateSingleValueForProperty:(id)arg1 function:(id)arg2 queryDescriptor:(id)arg3 database:(id)arg4 ;
+(BOOL)deleteEntitiesInDatabase:(id)arg1 predicate:(id)arg2 ;
+(id)maxPersistentIDWithPredicate:(id)arg1 database:(id)arg2 ;
+(id)propertyValuesForAnyInDatabase:(id)arg1 properties:(id)arg2 predicate:(id)arg3 ;
+(id)propertyValueForAnyInDatabase:(id)arg1 property:(id)arg2 predicate:(id)arg3 orderingProperties:(id)arg4 orderingDirections:(id)arg5 ;
+(BOOL)enumerateEntitiesInDatabase:(id)arg1 predicate:(id)arg2 error:(id*)arg3 usingBlock:(/*^block*/id)arg4 ;
+(id)queryWithDatabase:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3 orderingDirections:(id)arg4 ;
+(id)propertyValueForAnyInDatabase:(id)arg1 property:(id)arg2 predicate:(id)arg3 ;
+(BOOL)enumerateQueryResultsFromColumns:(id)arg1 properties:(id)arg2 predicate:(id)arg3 groupBy:(id)arg4 orderingProperties:(id)arg5 limit:(long long)arg6 database:(id)arg7 error:(id*)arg8 usingBlock:(/*^block*/id)arg9 ;
+(id)queryWithDatabase:(id)arg1 predicate:(id)arg2 limit:(unsigned long long)arg3 orderingProperties:(id)arg4 orderingDirections:(id)arg5 groupBy:(id)arg6 ;
+(id)aggregateValuesForProperty:(id)arg1 functions:(id)arg2 queryDescriptor:(id)arg3 database:(id)arg4 error:(id*)arg5 ;
+(id)aggregateSingleValueForProperty:(id)arg1 function:(id)arg2 predicate:(id)arg3 database:(id)arg4 ;
+(id)queryWithDatabase:(id)arg1 predicate:(id)arg2 orderingProperties:(id)arg3 ;
+(void)enumerateEntitiesInDatabase:(id)arg1 predicate:(id)arg2 usingBlock:(/*^block*/id)arg3 ;
+(id)sumValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 ;
+(id)countValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 ;
+(id)countDistinctForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 ;
+(id)queryWithDatabase:(id)arg1 predicate:(id)arg2 ;
+(id)anyInDatabase:(id)arg1 predicate:(id)arg2 ;
+(id)maxValueForProperty:(id)arg1 predicate:(id)arg2 database:(id)arg3 ;
+(id)queryStatementWithPredicate:(id)arg1 properties:(id)arg2 database:(id)arg3 ;
+(void)applyPropertySetters:(id)arg1 toObject:(id)arg2 withProperties:(id)arg3 row:(HDSQLiteRow*)arg4 ;
+(id)databaseTable;
+(id)columnsDefinition;
+(id)disambiguatedDatabaseTable;
+(id)joinClausesForProperty:(id)arg1 ;
+(id)deleteStatementWithProperty:(id)arg1 database:(id)arg2 ;
+(id)tableAliases;
+(id)associationPropertyForEntityClass:(Class)arg1 ;
+(id)disambiguatedSQLForProperty:(id)arg1 ;
+(id)entityWithPersistentID:(id)arg1 ;
+(id)foreignDatabaseColumnForProperty:(id)arg1 ;
+(id)foreignDatabaseTableForProperty:(id)arg1 ;
+(id)foreignKeyColumnForTable:(id)arg1 ;
+(id)databaseValueForProperty:(id)arg1 clientValue:(id)arg2 ;
+(id)databaseName;
+(id)allDatabaseColumnNames;
+(id)foreignDatabaseTablesToDelete;
+(id)copyDatabaseDictionaryToSetClientDictionary:(id)arg1 ;
+(id)databasePropertyToGetClientProperty:(id)arg1 ;
+(id)databasePropertyToSetClientProperty:(id)arg1 ;
+(void)applyOrderedSetters:(id)arg1 toObject:(id)arg2 row:(HDSQLiteRow*)arg3 ;
+(BOOL)_insertValues:(id)arg1 intoTable:(id)arg2 withPidOrNil:(id)arg3 replaceExisting:(BOOL)arg4 resultCode:(int*)arg5 database:(id)arg6 ;
+(id)_generateDisambiguatedDatabaseTableName;
+(id)_copyDeleteSQLWithTableName:(id)arg1 columnName:(id)arg2 ;
+(BOOL)_insertValues:(id)arg1 intoTable:(id)arg2 withPidOrNil:(id)arg3 resultCode:(int*)arg4 database:(id)arg5 ;
-(id)initWithPersistentID:(long long)arg1 ;
-(long long)persistentID;
-(NSString *)description;
-(id)initWithPropertyValues:(id)arg1 inDatabase:(id)arg2 replaceExisting:(BOOL)arg3 error:(id*)arg4 ;
-(BOOL)getValuesForProperties:(id)arg1 withDatabase:(id)arg2 applier:(/*^block*/id)arg3 ;
-(BOOL)existsInDatabase:(id)arg1 ;
-(BOOL)booleanForProperty:(id)arg1 database:(id)arg2 ;
-(id)UUIDForProperty:(id)arg1 database:(id)arg2 ;
-(BOOL)deleteFromDatabase:(id)arg1 error:(id*)arg2 ;
-(id)valueForProperty:(id)arg1 database:(id)arg2 ;
-(BOOL)deleteFromDatabase:(id)arg1 ;
-(id)dateForProperty:(id)arg1 database:(id)arg2 ;
-(id)stringForProperty:(id)arg1 database:(id)arg2 ;
-(BOOL)getValuesForProperties:(id)arg1 database:(id)arg2 handler:(/*^block*/id)arg3 ;
-(BOOL)setValue:(id)arg1 forProperty:(id)arg2 database:(id)arg3 ;
-(BOOL)setValuesWithDictionary:(id)arg1 database:(id)arg2 ;
-(void)setExternalValuesWithDictionary:(id)arg1 ;
-(id)_copyTableClusteredValuesWithValues:(id)arg1 ;
-(BOOL)_deleteRowFromTable:(id)arg1 usingColumn:(id)arg2 database:(id)arg3 ;
-(id)valueForExternalProperty:(id)arg1 ;
@end

